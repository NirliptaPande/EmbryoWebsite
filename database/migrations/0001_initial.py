# Generated by Django 2.0.1 on 2018-01-18 19:35

import database.models
from django.db import migrations, models
import django.db.models.deletion
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AIC_Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submission_date', models.DateTimeField(null=True)),
                ('company_name', models.CharField(max_length=100)),
                ('company_description', tinymce.models.HTMLField(blank=True)),
                ('logo', models.ImageField(blank=True, max_length=50, upload_to='./AIC_CompanyPhotos')),
                ('problem_statement_details', models.TextField(blank=True)),
                ('problem_statement_file', models.FileField(blank=True, upload_to='./Problem_Statements')),
                ('allowed', models.BooleanField(default=True, verbose_name='Display on site')),
            ],
            options={
                'db_table': 'aic_company_details',
            },
        ),
        migrations.CreateModel(
            name='AIC_Discipline',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stream', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='AIC_Solution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team_name', models.CharField(max_length=100, verbose_name='Team Name* (Create any single word teamname.)   ')),
                ('project_name', models.CharField(max_length=100, verbose_name='Project Name* (Preferably Problem Name.)   ')),
                ('member_one_name', models.CharField(max_length=100, verbose_name='Member One Name*   ')),
                ('member_one_email', models.EmailField(blank=True, max_length=254, verbose_name='Member One Email*   ')),
                ('member_two_name', models.CharField(blank=True, max_length=100, verbose_name='Member Two Name   ')),
                ('member_two_email', models.EmailField(blank=True, max_length=254, verbose_name='Member Two Email   ')),
                ('member_three_name', models.CharField(blank=True, max_length=100, verbose_name='Member Three Name   ')),
                ('member_three_email', models.EmailField(blank=True, max_length=254, verbose_name='Member Three Email   ')),
                ('member_four_name', models.CharField(blank=True, max_length=100, verbose_name='Member Four Name   ')),
                ('member_four_email', models.EmailField(blank=True, max_length=254, verbose_name='Member Four Email   ')),
                ('member_five_name', models.CharField(blank=True, max_length=100, verbose_name='Member Five Name   ')),
                ('member_five_email', models.EmailField(blank=True, max_length=254, verbose_name='Member Five Email   ')),
                ('description', models.TextField(blank=True, verbose_name='Briefly describe your solution (at max 500 characters.)    ')),
                ('company_discipline', models.CharField(default='Not Applicable', max_length=50, verbose_name='Choose the track under which you are applying for the company*')),
            ],
        ),
        migrations.CreateModel(
            name='Atmos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(null=True)),
                ('topic', tinymce.models.HTMLField(max_length=50, null=True)),
                ('moreinfo', tinymce.models.HTMLField(blank=True)),
                ('photo', models.ImageField(blank=True, max_length=50, upload_to='AtmosPhotos')),
                ('discussion', models.TextField(blank=True)),
                ('allowed', models.BooleanField(default=True, verbose_name='Display on site')),
                ('venue', models.CharField(max_length=10)),
                ('campus', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'atmos',
            },
        ),
        migrations.CreateModel(
            name='Discipline',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stream', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team_name', models.CharField(max_length=100)),
                ('company_name', models.CharField(max_length=100)),
                ('docfile', models.FileField(upload_to=database.models.get_upload_path)),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='events')),
                ('allowed', models.BooleanField(default=True)),
                ('description', tinymce.models.HTMLField()),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feedback', models.FileField(blank=True, upload_to='feedback')),
                ('slides', models.FileField(blank=True, max_length=150, upload_to='slides')),
                ('video_link', models.URLField(blank=True, max_length=50)),
                ('poster', models.ImageField(blank=True, max_length=150, upload_to='posters')),
            ],
        ),
        migrations.CreateModel(
            name='Gallery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, verbose_name='Heading')),
                ('photo', models.ImageField(max_length=50, upload_to='images_gallery')),
                ('details', models.TextField(blank=True)),
                ('allowed', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name_plural': 'Gallery',
            },
        ),
        migrations.CreateModel(
            name='Lecture',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(null=True)),
                ('topic', models.CharField(max_length=500)),
                ('moreinfo', tinymce.models.HTMLField(blank=True)),
                ('photo', models.ImageField(blank=True, max_length=50, upload_to='Speakerphotos')),
                ('discussion', models.TextField(blank=True)),
                ('allowed', models.BooleanField(default=True, verbose_name='Display on site')),
                ('venue', models.CharField(max_length=100)),
                ('campus', models.CharField(max_length=50)),
                ('discipline', models.ManyToManyField(to='database.Discipline')),
            ],
            options={
                'db_table': 'lectures',
            },
        ),
        migrations.CreateModel(
            name='LecturesDiscipline',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lecture_id', models.CharField(max_length=50)),
                ('discipline_id', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'lec_discipline',
            },
        ),
        migrations.CreateModel(
            name='Newsletter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('newsletter', models.FileField(max_length=150, upload_to='newsletters')),
                ('allowed', models.BooleanField(default=True, verbose_name='Publish on site')),
            ],
        ),
        migrations.CreateModel(
            name='PagesContent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Page Name')),
                ('link', models.CharField(blank=True, max_length=50, verbose_name='Page Link')),
                ('content', tinymce.models.HTMLField(verbose_name='Put content of page here')),
            ],
            options={
                'verbose_name_plural': 'Pages Content',
            },
        ),
        migrations.CreateModel(
            name='Presenter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_column='Name', max_length=50)),
                ('credentials', tinymce.models.HTMLField(blank=True, db_column='Credentials', help_text='Enter the current designation of the speaker, and past work experience')),
                ('profile', tinymce.models.HTMLField(db_column='Profile', help_text='Enter the qualification and other details')),
                ('email', models.EmailField(blank=True, max_length=50, verbose_name='e-mail')),
                ('address', tinymce.models.HTMLField(blank=True)),
            ],
            options={
                'db_table': 'presenters',
            },
        ),
        migrations.CreateModel(
            name='SignUp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50, verbose_name='First Name*')),
                ('last_name', models.CharField(max_length=50, verbose_name='Last Name*')),
                ('email', models.EmailField(max_length=50, verbose_name='E-mail*')),
                ('alumni', models.BooleanField(verbose_name='Are you an alumni?')),
                ('batch', models.IntegerField()),
                ('address', models.TextField(blank=True)),
                ('discipline_first', models.CharField(blank=True, default='Other', max_length=50)),
                ('discipline_dual', models.CharField(blank=True, default='Not Applicable', max_length=50)),
                ('phone', models.CharField(blank=True, default='+91', max_length=13)),
                ('biography', models.TextField(blank=True, verbose_name='Short Biography')),
                ('lect_topics', models.TextField(verbose_name='What topics would you like to give the lecture on?*')),
                ('talk_discipline', models.CharField(blank=True, default='Interdisciplinary', max_length=50, verbose_name='Select the Discipline that matches the topics you wish to deliver a talk on')),
            ],
        ),
        migrations.AddField(
            model_name='lecture',
            name='presenter',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='database.Presenter'),
        ),
        migrations.AddField(
            model_name='feedback',
            name='lecture',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='database.Lecture'),
        ),
        migrations.AddField(
            model_name='atmos',
            name='discipline',
            field=models.ManyToManyField(to='database.Discipline'),
        ),
        migrations.AddField(
            model_name='aic_company',
            name='discipline',
            field=models.ManyToManyField(to='database.AIC_Discipline'),
        ),
    ]
